{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"mopack \u00a7 mopack (pronounced \"ammopack\" - name subject to change) is an experimental multiple origin package manager, with an emphasis on C/C++ packages. It's designed to allow users to resolve package dependencies from multiple package managers (\"origins\").","title":"Home"},{"location":"#mopack","text":"mopack (pronounced \"ammopack\" - name subject to change) is an experimental multiple origin package manager, with an emphasis on C/C++ packages. It's designed to allow users to resolve package dependencies from multiple package managers (\"origins\").","title":"mopack"},{"location":"about/license/","text":"License \u00a7 BSD 3-clause license \u00a7 Copyright (c) 2020-2021, Jim Porter All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"License"},{"location":"about/license/#license","text":"","title":"License"},{"location":"about/license/#bsd-3-clause-license","text":"Copyright (c) 2020-2021, Jim Porter All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"BSD 3-clause license"},{"location":"reference/builders/","text":"Builders \u00a7 bfg9000 \u00a7 options: builders: bfg9000: toolchain: <path> packages: my_pkg: # ... builder: type: bfg9000 extra_args: <shell-args> cmake \u00a7 options: builders: cmake: toolchain: <path> packages: my_pkg: # ... builder: type: cmake extra_args: <shell-args> custom \u00a7 packages: my_pkg: # ... builder: type: custom build_commands: <shell-args-list> deploy_commands: <shell-args-list> none \u00a7 packages: my_pkg: # ... builder: type: none","title":"Builders"},{"location":"reference/builders/#builders","text":"","title":"Builders"},{"location":"reference/builders/#bfg9000","text":"options: builders: bfg9000: toolchain: <path> packages: my_pkg: # ... builder: type: bfg9000 extra_args: <shell-args>","title":"bfg9000"},{"location":"reference/builders/#cmake","text":"options: builders: cmake: toolchain: <path> packages: my_pkg: # ... builder: type: cmake extra_args: <shell-args>","title":"cmake"},{"location":"reference/builders/#custom","text":"packages: my_pkg: # ... builder: type: custom build_commands: <shell-args-list> deploy_commands: <shell-args-list>","title":"custom"},{"location":"reference/builders/#none","text":"packages: my_pkg: # ... builder: type: none","title":"none"},{"location":"reference/environment-vars/","text":"Environment Variables \u00a7 mopack reads from a number of environment variables. Below is a full list of all the environment variables mopack recognizes. Command variables \u00a7 ADD_APT_REPOSITORY \u00a7 Default: sudo add-apt-repository The command to use when adding an apt repository. APT_GET \u00a7 Default: sudo apt-get The command to use when installing an apt package. BFG9000 \u00a7 Default: bfg9000 The command to use when configuring a bfg9000 -based project. CONAN \u00a7 Default: conan The command to use when installing a conan package. CMAKE \u00a7 Default: cmake The command to use when configuring a CMake -based project. GIT \u00a7 Default: git The command to use when working with a git repository. NINJA \u00a7 Default: ninja The command to use when building via the Ninja build system. PATCH \u00a7 Default: patch The command to use when applying a patch file. System variables \u00a7 CLICOLOR \u00a7 Default: none If set to 0 , disable colors in terminal output, overriding the --color option and tty detection. If set to non-zero, enable colors if outputting to a tty. CLICOLOR_FORCE \u00a7 Default: none If set to non-zero, enable colors in the terminal output regardless of whether the destination is a tty. This overrides CLICOLOR .","title":"Environment Variables"},{"location":"reference/environment-vars/#environment-variables","text":"mopack reads from a number of environment variables. Below is a full list of all the environment variables mopack recognizes.","title":"Environment Variables"},{"location":"reference/environment-vars/#command-variables","text":"","title":"Command variables"},{"location":"reference/environment-vars/#add_apt_repository","text":"Default: sudo add-apt-repository The command to use when adding an apt repository.","title":"ADD_APT_REPOSITORY"},{"location":"reference/environment-vars/#apt_get","text":"Default: sudo apt-get The command to use when installing an apt package.","title":"APT_GET"},{"location":"reference/environment-vars/#bfg9000","text":"Default: bfg9000 The command to use when configuring a bfg9000 -based project.","title":"BFG9000"},{"location":"reference/environment-vars/#conan","text":"Default: conan The command to use when installing a conan package.","title":"CONAN"},{"location":"reference/environment-vars/#cmake","text":"Default: cmake The command to use when configuring a CMake -based project.","title":"CMAKE"},{"location":"reference/environment-vars/#git","text":"Default: git The command to use when working with a git repository.","title":"GIT"},{"location":"reference/environment-vars/#ninja","text":"Default: ninja The command to use when building via the Ninja build system.","title":"NINJA"},{"location":"reference/environment-vars/#patch","text":"Default: patch The command to use when applying a patch file.","title":"PATCH"},{"location":"reference/environment-vars/#system-variables","text":"","title":"System variables"},{"location":"reference/environment-vars/#clicolor","text":"Default: none If set to 0 , disable colors in terminal output, overriding the --color option and tty detection. If set to non-zero, enable colors if outputting to a tty.","title":"CLICOLOR"},{"location":"reference/environment-vars/#clicolor_force","text":"Default: none If set to non-zero, enable colors in the terminal output regardless of whether the destination is a tty. This overrides CLICOLOR .","title":"CLICOLOR_FORCE"},{"location":"reference/sources/","text":"Package Sources \u00a7 Source distributions \u00a7 directory \u00a7 packages: my_pkg: source: directory path: <path> build: <build> usage: <usage> git \u00a7 packages: my_pkg: source: repository tag: <tag-name> # or... branch: <branch-name> # or... commit: <commit-sha> srcdir: <inner-path> build: <build> usage: <usage> tarball \u00a7 packages: my_pkg: source: tarball path: <path> # or... url: <url> files: <glob-list> srcdir: <inner-path> patch: <path> build: <build> usage: <usage> Other sources \u00a7 apt \u00a7 packages: my_pkg: source: apt name: <apt-name> remote: <apt-repo> usage: <usage> conan \u00a7 options: sources: conan: build: <string-list> extra_args: <shell-args> packages: my_pkg: source: conan name: <conan-name> remote: <conan-repo> usage: <usage> system \u00a7 packages: my_pkg: source: system auto_link: <boolean> include_path: <path-list> library_path: <path-list> headers: <header-list> libraries: <library-list> compile_flags: <shell-args> link_flags: <shell-args> submodule_map: <submodule-map> # or... submodule_map: my_submodule: <submodule-map> '*': <submodule-map>","title":"Sources"},{"location":"reference/sources/#package-sources","text":"","title":"Package Sources"},{"location":"reference/sources/#source-distributions","text":"","title":"Source distributions"},{"location":"reference/sources/#directory","text":"packages: my_pkg: source: directory path: <path> build: <build> usage: <usage>","title":"directory"},{"location":"reference/sources/#git","text":"packages: my_pkg: source: repository tag: <tag-name> # or... branch: <branch-name> # or... commit: <commit-sha> srcdir: <inner-path> build: <build> usage: <usage>","title":"git"},{"location":"reference/sources/#tarball","text":"packages: my_pkg: source: tarball path: <path> # or... url: <url> files: <glob-list> srcdir: <inner-path> patch: <path> build: <build> usage: <usage>","title":"tarball"},{"location":"reference/sources/#other-sources","text":"","title":"Other sources"},{"location":"reference/sources/#apt","text":"packages: my_pkg: source: apt name: <apt-name> remote: <apt-repo> usage: <usage>","title":"apt"},{"location":"reference/sources/#conan","text":"options: sources: conan: build: <string-list> extra_args: <shell-args> packages: my_pkg: source: conan name: <conan-name> remote: <conan-repo> usage: <usage>","title":"conan"},{"location":"reference/sources/#system","text":"packages: my_pkg: source: system auto_link: <boolean> include_path: <path-list> library_path: <path-list> headers: <header-list> libraries: <library-list> compile_flags: <shell-args> link_flags: <shell-args> submodule_map: <submodule-map> # or... submodule_map: my_submodule: <submodule-map> '*': <submodule-map>","title":"system"},{"location":"reference/usage/","text":"Usage \u00a7 path/system \u00a7 packages: my_pkg: # ... usage: type: path # or ... type: system auto_link: <boolean> include_path: <path-list> library_path: <path-list> headers: <header-list> libraries: <library-list> compile_flags: <shell-args> link_flags: <shell-args> submodule_map: <submodule-map> # or... submodule_map: my_submodule: <submodule-map> '*': <submodule-map> pkg-config \u00a7 packages: my_pkg: # ... usage: type: pkg-config path: <path> extra_args: <shell-args> submodule_map: <submodule-map> # or... submodule_map: my_submodule: <submodule-map> '*': <submodule-map>","title":"Usage"},{"location":"reference/usage/#usage","text":"","title":"Usage"},{"location":"reference/usage/#pathsystem","text":"packages: my_pkg: # ... usage: type: path # or ... type: system auto_link: <boolean> include_path: <path-list> library_path: <path-list> headers: <header-list> libraries: <library-list> compile_flags: <shell-args> link_flags: <shell-args> submodule_map: <submodule-map> # or... submodule_map: my_submodule: <submodule-map> '*': <submodule-map>","title":"path/system"},{"location":"reference/usage/#pkg-config","text":"packages: my_pkg: # ... usage: type: pkg-config path: <path> extra_args: <shell-args> submodule_map: <submodule-map> # or... submodule_map: my_submodule: <submodule-map> '*': <submodule-map>","title":"pkg-config"}]}