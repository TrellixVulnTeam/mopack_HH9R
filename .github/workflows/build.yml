name: build
on:
  pull_request:
  push:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        compiler: [cc, msvc]
        python-version: [3.7]
        exclude:
          - os: ubuntu-latest
            compiler: msvc
          - os: macos-latest
            compiler: msvc
      fail-fast: false

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Clone bfg9000
      uses: actions/checkout@v2
      with:
        repository: jimporter/bfg9000
        ref: mopack
        path: bfg9000
    - name: Install Python dependencies
      run: |
        pip install ./bfg9000
        pip install codecov '.[test]'
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install ninja-build
    - name: Install Windows dependencies
      if: matrix.os == 'windows-latest'
      run: |
        cinst ninja
        $gnomebase = "https://ftp.gnome.org/pub/gnome/binaries/win32"
        curl -LO $gnomebase/dependencies/pkg-config_0.26-1_win32.zip
        curl -LO $gnomebase/glib/2.28/glib_2.28.8-1_win32.zip
        curl -LO $gnomebase/dependencies/gettext-runtime_0.18.1.1-2_win32.zip
        7z x -y pkg-config_0.26-1_win32.zip -oC:\pkg-config
        7z x -y glib_2.28.8-1_win32.zip -oC:\pkg-config
        7z x -y gettext-runtime_0.18.1.1-2_win32.zip -oC:\pkg-config
        echo "::set-env name=PKG_CONFIG::C:\pkg-config\bin\pkg-config.exe"
    - name: Install macOS dependencies
      if: matrix.os == 'macos-latest'
      run: |
        brew install ninja pkg-config
    - name: Run tests (cc)
      if: matrix.compiler == 'cc'
      run: |
        python setup.py coverage -q
        coverage xml
    - name: Run tests (msvc)
      if: matrix.compiler == 'msvc'
      run: |
        $installpath = vswhere -latest -property installationpath
        Import-Module (Join-Path $installpath "Common7\Tools\Microsoft.VisualStudio.DevShell.dll")
        $null = Enter-VsDevShell -VsInstallPath $installpath
        conan profile new default --detect
        $Env:CC = "cl.exe"
        $Env:CXX = "cl.exe"
        python setup.py coverage -q
        coverage xml
    - name: Upload coverage
      uses: codecov/codecov-action@v1
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        pip install '.[test]'
    - name: Run lint
      run: |
        python setup.py lint
