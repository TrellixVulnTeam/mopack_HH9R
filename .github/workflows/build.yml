name: build
on:
  pull_request:
  push:
  schedule:
    - cron: '0 0 1 * *'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        compiler: [cc, msvc]
        python-version: [3.6, 3.7, 3.8, 3.9]

        include:
          - os: ubuntu-latest
            extra-tests: [apt, mingw-cross]
          - os: windows-latest
            compiler: cc
            skipped-tests: [boost]
        exclude:
          - os: ubuntu-latest
            compiler: msvc
          - os: macos-latest
            compiler: msvc
      fail-fast: false
    env:
      MOPACK_EXTRA_TESTS: ${{ join(matrix.extra-tests, ' ') }}
      MOPACK_SKIPPED_TESTS: ${{ join(matrix.skipped-tests, ' ') }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Clone bfg9000
        uses: actions/checkout@v2
        with:
          repository: jimporter/bfg9000
          path: bfg9000
      - name: Install Python dependencies
        run: |
          pip install ./bfg9000
          pip install codecov '.[test]'
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install mingw-w64 ninja-build libboost-dev
      - name: Install Windows dependencies
        if: matrix.os == 'windows-latest'
        run: |
          cinst ninja
          ${gnomebase} = "https://ftp.gnome.org/pub/gnome/binaries/win32"
          curl -LO ${gnomebase}/dependencies/pkg-config_0.26-1_win32.zip
          curl -LO ${gnomebase}/glib/2.28/glib_2.28.8-1_win32.zip
          curl -LO ${gnomebase}/dependencies/gettext-runtime_0.18.1.1-2_win32.zip
          7z x -y pkg-config_0.26-1_win32.zip -oC:\pkg-config
          7z x -y glib_2.28.8-1_win32.zip -oC:\pkg-config
          7z x -y gettext-runtime_0.18.1.1-2_win32.zip -oC:\pkg-config
          echo "PKG_CONFIG=C:\pkg-config\bin\pkg-config.exe" >> ${env:GITHUB_ENV}
          echo "BOOST_INCLUDEDIR=$env:BOOST_ROOT_1_72_0" >> ${env:GITHUB_ENV}
      - name: Install macOS dependencies
        if: matrix.os == 'macos-latest'
        run: |
          brew install ninja pkg-config boost
      - name: Run tests (cc)
        if: matrix.compiler == 'cc'
        run: |
          python setup.py coverage -q
      - name: Run tests (msvc)
        if: matrix.compiler == 'msvc'
        run: |
          ${installpath} = vswhere -latest -property installationpath
          Import-Module (Join-Path ${installpath} "Common7\Tools\Microsoft.VisualStudio.DevShell.dll")
          ${null} = Enter-VsDevShell -VsInstallPath $installpath
          conan profile new default --detect
          ${env:CC} = "cl.exe"
          ${env:CXX} = "cl.exe"
          python setup.py coverage -q
      - name: Upload coverage
        run: |
          codecov
  build-cygwin:
    runs-on: windows-latest
    env:
      CYGROOT: C:\cygwin
      CYGCACHE: C:\cygwin\var\cache\setup
      CONAN_CMAKE_GENERATOR: Ninja

    steps:
      - uses: actions/checkout@v2
      - name: Clone bfg9000
        uses: actions/checkout@v2
        with:
          repository: jimporter/bfg9000
          path: bfg9000
      - name: Install Cygwin
        shell: cmd
        run: >
          curl -LO https://cygwin.com/setup-x86_64.exe

          .\setup-x86_64.exe -qgnNdO -R %CYGROOT% -l %CYGCACHE%
          -s http://mirrors.kernel.org/sourceware/cygwin/
          -P cmake,gcc-g++,git,libboost-devel,make,ninja,pkg-config,python38
          -P python38-pip,python38-setuptools
      - name: Copy mopack to Cygwin
        run: |
          robocopy . ${env:CYGROOT}\home\runneradmin\bfg9000 /E
          if(${LastExitCode} -le 7) { ${LastExitCode} = 0 }
      - name: Install Python dependencies
        run: >
          C:\cygwin\bin\bash -lc
          "cd bfg9000 && pip3.8 install ./bfg9000 && pip3.8 install codecov '.[test]'"
      - name: Run tests
        run: >
          C:\cygwin\bin\bash -lc
          "cd bfg9000 && python3.8 setup.py coverage -q"
      - name: Upload coverage
        run: >
          C:\cygwin\bin\bash -lc "cd bfg9000 && codecov"
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          pip install '.[test]'
      - name: Run lint
        run: |
          python setup.py lint
